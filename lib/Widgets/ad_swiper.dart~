import 'package:carousel_slider/carousel_slider.dart';
import 'package:echocode/Data/dummy_ads.dart';
import 'package:flutter/material.dart';
import 'package:video_player/video_player.dart';

import '../Models/ad_model.dart';


class AdSwiper extends StatefulWidget {
  const AdSwiper({super.key});

  @override
  State<AdSwiper> createState() => _AdSwiperState();
}

class _AdSwiperState extends State<AdSwiper> {
  final List<VideoPlayerController?> _controllers = [];

  @override
  void initState() {
    super.initState();
    for (var ad in dummyAds) {
      if (ad.type == AdType.video) {
        final controller = VideoPlayerController.asset(ad.path)..initialize();
        controller.setLooping(true);
        controller.play();
        _controllers.add(controller);
      } else {
        _controllers.add(null);
      }
    }
  }

  @override
  void dispose() {
    for (var controller in _controllers) {
      controller?.dispose();
    }
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return CarouselSlider.builder(
      itemCount: dummyAds.length,
      itemBuilder: (context, index, realIdx) {
        final ad = dummyAds[index];
        if (ad.type == AdType.image) {
          return ClipRRect(
            borderRadius: BorderRadius.circular(16),
            child: Image.asset(ad.path, fit: BoxFit.cover, width: double.infinity),
          );
        } else {
          final controller = _controllers[index];
          if (controller != null && controller.value.isInitialized) {
            return ClipRRect(
              borderRadius: BorderRadius.circular(16),
              child: AspectRatio(
                aspectRatio: controller.value.aspectRatio,
                child: VideoPlayer(controller),
              ),
            );
          } else {
            return const Center(child: CircularProgressIndicator());
          }
        }
      },
      options: CarouselOptions(
        height: 200,
        autoPlay: true,
        enlargeCenterPage: true,
        viewportFraction: 0.85,
        autoPlayInterval: const Duration(seconds: 5),
      ),
    );
  }
}